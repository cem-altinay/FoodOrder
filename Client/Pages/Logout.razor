@page "/logout"

@code {

  [Inject] ILocalStorageService LocalStorageService { get; set; }
  [Inject] AuthenticationStateProvider AuthenticationStateProvider { get; set; }
  [Inject] HttpClient Client { get; set; }

  [Inject] NavigationManager NavigationManager { get; set; }

  protected override async Task OnInitializedAsync()
  {
    await LocalStorageService.RemoveItemAsync("token");

    await LocalStorageService.RemoveItemAsync("email");
    await LocalStorageService.RemoveItemAsync("fullname");
    await LocalStorageService.RemoveItemAsync("userid");

    (AuthenticationStateProvider as AuthStateProvider).NotifyUserLogout();
    Client.DefaultRequestHeaders.Authorization = null;

    NavigationManager.NavigateTo("/login");
  }

}